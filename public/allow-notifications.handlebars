<!DOCTYPE html>
<html>

<head>
    <title>Allow Notifications</title>

    <link rel="icon" href="/static/favicon.ico">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/css/materialize.min.css">

    <style>
        html,
        body,
        .container {
            background-color: #E8F0FF;
            height: 100%;
        }

        .container .row {
            height: 100%;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row valign-wrapper">
            <div class="col s6 offset-s3">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">Allow Notifications</span>
                        <p>
                            {{name}} would like to send you notifications.
                        </p>
                    </div>
                    <div class="card-action">
                        <a onclick="onClickAllow()">Allow</a>
                        <a onclick="onClickDeny()">Deny</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="/static/scripts/main.js"></script>
    <script>
        const publicKey = '{{{client.publicKey}}}';

        initialize(publicKey, '{{host}}');

        if (!('Notification' in window)) {
            redirect(false);
        }

        if (Notification.permission === 'denied') {
            redirect(false);
        }

        if (Notification.permission === 'granted') {
            redirect(true);
        }

        function onClickAllow() {
            prompt();
        }

        function onClickDeny() {
            redirect(false);
        }

        function prompt() {
            Notification.requestPermission().then(function (result) {
                switch (result) {
                    case 'denied':
                        redirect(false);
                        return;
                    case 'granted':
                        redirect(true);
                        return;
                }
            });
        }

        function redirect(granted) {
            const callback = getQueryParameters()['callback'];

            if (!callback) {

                if (document.referrer) {
                    window.location.href = document.referrer;

                    return;
                }

                return;
            }

            window.location.href = callback;
        }

        function getQueryParameters() {
            const str = window.location.href;

            const pattern1 = new RegExp(/^https?:\/\/[^?]*\??(.*)$/);

            const queryString = pattern1.exec(str)[1];

            if (!queryString) {
                return {};
            }

            const pattern2 = new RegExp(/([^=]+)=([^&]+)&?/g);

            const pattern2Matches = queryString.match(pattern2);

            const queryParameters = {};

            for (const match of pattern2Matches) {
                const regexMatch = new RegExp(/^([^=]+)=([^&]+)&?$/).exec(match);

                queryParameters[regexMatch[1]] = regexMatch[2];
            }

            return queryParameters;
        }
    </script>
</body>

</html>